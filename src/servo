#pragma once
#include <Arduino.h>
#include <Servo.h>

namespace HeraCross
{

class PulseServo
{
    private:
    int pin,maxAngle,minAngle,pulse_width;
    unsigned long time_until=0;
    public:
    PulseServo(int _pin,int _maxAngle, int _minAngle)
    {
        pin=_pin;
        maxAngle=_maxAngle;
        minAngle=_minAngle;
        digitalWrite(pin,0);
    }
    virtual void SetPulse(int pulse)
    {
        if(micros()<time_until)delayMicroseconds(time_until-micros());
        digitalWrite(pin,1);
        delayMicroseconds(pulse);
        digitalWrite(pin,0);
        time_until=micros()+20000-pulse;//直接存储剩下需要delay的毫秒数，不使用delay阻塞
    }
    void SetPulse(int pulse,int rep)
    {
        while(rep--)SetPulse(pulse);
    }
    void SetAngle(int angle)
    {
        SetPulse(((angle*11)+500));
    }
    void SetAngle(int angle,int rep)
    {
        while(rep--)SetAngle(angle);
    }
    void TurnMax()
    {
        SetAngle(maxAngle);
    }
    void TurnMin()
    {
        SetAngle(minAngle);
    }
};
class DutyServo 
{
    private:
    int pin,maxAngle,minAngle,pulse_width;
    public:
    DutyServo(int _pin,int _maxAngle, int _minAngle)
    {
        pin=_pin;
        maxAngle=_maxAngle;
        minAngle=_minAngle;
        digitalWrite(pin,0);
    }
    void SetPulse(int pulse)
    {
        analogWrite(pin,pulse);
    }
    void TurnMax()
    {
        SetPulse(maxAngle);
    }
    void TurnMax(int rep)
    {
        while(rep--)TurnMax();
    }
    void TurnMin()
    {
        SetPulse(minAngle);
    }
    void TurnMin(int rep)
    {
        while(rep--)TurnMin();
    }
};

}