#pragma once
#include <Arduino.h>
#include "tickable"

namespace HeraCross
{
class Servo;
class ServoBus;

class ServoBus : public Tickable
{
    private:
    int cnt=0;
    Servo* servos[SERVO_COUNT];
    int i;
    public:
    void Register(Servo* s)
    {
        servos[cnt++]=s;
    }
    void tick(int nowtick) override;
}servo_bus;
class Servo
{
    friend class ServoBus;
    private:
    int pin,maxAngle,minAngle,pulse_width;
    public:
    Servo(int _pin,int _maxAngle, int _minAngle,const char* _taskName)
    {
        pin=_pin;
        maxAngle=_maxAngle;
        minAngle=_minAngle;
        // servo_bus.Register(this);
    }
    void SetPulse(int pulse)
    {
        // pulse_width=pulse_in_100us;
        digitalWrite(pin,1);
        delayMicroseconds(pulse);
        digitalWrite(pin,0);
        delay(20-pulse_width/1000);
    }
    void SetAngle(int angle)
    {
        SetPulse(((angle*11)+500));
    }
    void TurnMax()
    {
        SetAngle(maxAngle);
    }
    void TurnMin()
    {
        SetAngle(minAngle);
    }
};


void ServoBus::tick(int nowtick)
{
    for(i=0;i<cnt;i++)
    {
        if(nowtick<servos[i]->pulse_width)
        {
            digitalWrite(servos[i]->pin,1);
        }
        else
        {
            digitalWrite(servos[i]->pin,0);
        }
    }
}
}